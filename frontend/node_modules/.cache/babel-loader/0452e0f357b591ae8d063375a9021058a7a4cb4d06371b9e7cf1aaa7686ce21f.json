{"ast":null,"code":"var _jsxFileName = \"/Users/zalan/Desktop/Programozos Dolgok/Poytogesek.nosync/PeakProjectGit/stock-symbol-app/frontend/src/components/Chart.jsx\";\nimport React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n// import { Line } from 'react-chartjs-2';\n// import PropTypes from 'prop-types';\n// import { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\n\n// // Registering the necessary chart elements for Chart.js version 3+\n// ChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chart = ({\n  priceHistory\n}) => {\n  // Format the data received via props\n  // const labels = priceHistory.map(item => item.date); // assuming your priceHistory items have a date\n  // const data = priceHistory.map(item => item.price); // assuming priceHistory items have a price value\n\n  if (!priceHistory || priceHistory.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500\",\n      children: \"No data available for chart rendering\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n  console.log(priceHistory);\n  // const labels = priceHistory.map(item => item.date); // Extract dates for X-axis\n  // const data = priceHistory.map(item => item.price);\n\n  const data = {\n    labels: priceHistory.map(item => item.date),\n    series: [priceHistory.map(item => item.price)]\n  };\n  const options = {\n    high: Math.max(...priceHistory.map(item => item.price)) + 10,\n    low: Math.min(...priceHistory.map(item => item.price)) - 10\n  };\n  console.log(labels);\n  console.log(data);\n\n  // const chartData = {\n  //   labels: labels,\n  //   datasets: [\n  //     {\n  //       label: 'Stock Price ($)',\n  //       data: data,\n  //       fill: false,\n  //       borderColor: 'rgba(75, 192, 192, 1)',\n  //       tension: 0.1,\n  //     },\n  //   ],\n  // };\n\n  // const options = {\n  //   responsive: true,\n  //   plugins: {\n  //     title: {\n  //       display: true,\n  //       text: 'Stock Price Over Time',\n  //     },\n  //   },\n  // };\n\n  console.log(chartData);\n  console.log(options);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-6 p-6 bg-gray-800 shadow-lg rounded-xl text-center border border-gray-700\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg font-medium text-gray-300\",\n      children: \"Stock Price Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-64 bg-gray-700 rounded-xl\",\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: data,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"price\",\n            stroke: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n// Chart.propTypes = {\n//   priceHistory: PropTypes.array.isRequired,\n// };\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","Chart","priceHistory","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","console","log","data","labels","map","item","date","series","price","options","high","Math","max","low","min","chartData","width","height","strokeDasharray","dataKey","type","stroke","_c","$RefreshReg$"],"sources":["/Users/zalan/Desktop/Programozos Dolgok/Poytogesek.nosync/PeakProjectGit/stock-symbol-app/frontend/src/components/Chart.jsx"],"sourcesContent":["import React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n// import { Line } from 'react-chartjs-2';\n// import PropTypes from 'prop-types';\n// import { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\n\n// // Registering the necessary chart elements for Chart.js version 3+\n// ChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\n\nconst Chart = ({ priceHistory }) => {\n  // Format the data received via props\n  // const labels = priceHistory.map(item => item.date); // assuming your priceHistory items have a date\n  // const data = priceHistory.map(item => item.price); // assuming priceHistory items have a price value\n\n  if (!priceHistory || priceHistory.length === 0) {\n    return <p className=\"text-red-500\">No data available for chart rendering</p>;\n  }\n\n  console.log(priceHistory);\n  // const labels = priceHistory.map(item => item.date); // Extract dates for X-axis\n  // const data = priceHistory.map(item => item.price);\n  \n\n  const data = {\n    labels: priceHistory.map(item => item.date),\n    series: [priceHistory.map(item => item.price)],\n  };\n\n  const options = {\n    high: Math.max(...priceHistory.map(item => item.price)) + 10,\n    low: Math.min(...priceHistory.map(item => item.price)) - 10,\n  };\n\n  console.log(labels);\n  console.log(data);\n\n  // const chartData = {\n  //   labels: labels,\n  //   datasets: [\n  //     {\n  //       label: 'Stock Price ($)',\n  //       data: data,\n  //       fill: false,\n  //       borderColor: 'rgba(75, 192, 192, 1)',\n  //       tension: 0.1,\n  //     },\n  //   ],\n  // };\n\n  // const options = {\n  //   responsive: true,\n  //   plugins: {\n  //     title: {\n  //       display: true,\n  //       text: 'Stock Price Over Time',\n  //     },\n  //   },\n  // };\n\n  console.log(chartData);\n  console.log(options);\n  return (\n    <div className=\"mt-6 p-6 bg-gray-800 shadow-lg rounded-xl text-center border border-gray-700\">\n      <p className=\"text-lg font-medium text-gray-300\">Stock Price Chart</p>\n      <div className=\"h-64 bg-gray-700 rounded-xl\">\n        {/* <Line data={chartData} options={options} /> */}\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <LineChart data={data}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"date\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Line type=\"monotone\" dataKey=\"price\" stroke=\"#8884d8\" />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n    </div>\n  );\n};\n\n// Chart.propTypes = {\n//   priceHistory: PropTypes.array.isRequired,\n// };\n\nexport default Chart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}