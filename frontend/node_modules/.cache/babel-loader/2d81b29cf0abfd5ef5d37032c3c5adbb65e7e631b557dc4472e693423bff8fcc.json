{"ast":null,"code":"var _jsxFileName = \"/Users/zalan/Desktop/Programozos Dolgok/Poytogesek.nosync/PeakProjectGit/stock-symbol-app/frontend/src/components/Chart.jsx\";\nimport React from 'react';\n// import { Line } from 'react-chartjs-2';\nimport PropTypes from 'prop-types';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Registering the necessary chart elements for Chart.js version 3+\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst Chart = ({\n  priceHistory\n}) => {\n  // Format the data received via props\n  // const labels = priceHistory.map(item => item.date); // assuming your priceHistory items have a date\n  // const data = priceHistory.map(item => item.price); // assuming priceHistory items have a price value\n\n  if (!priceHistory || priceHistory.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500\",\n      children: \"No data available for chart rendering\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n  console.log(priceHistory);\n  const labels = priceHistory.map(item => item.date); // Extract dates for X-axis\n  const data = priceHistory.map(item => item.price);\n  console.log(labels);\n  console.log(data);\n  const chartData = {\n    labels: labels,\n    datasets: [{\n      label: 'Stock Price ($)',\n      data: data,\n      fill: false,\n      borderColor: 'rgba(75, 192, 192, 1)',\n      tension: 0.1\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      title: {\n        display: true,\n        text: 'Stock Price Over Time'\n      }\n    }\n  };\n  console.log(chartData);\n  console.log(options);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-6 p-6 bg-gray-800 shadow-lg rounded-xl text-center border border-gray-700\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg font-medium text-gray-300\",\n      children: \"Stock Price Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-64 bg-gray-700 rounded-xl\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_c = Chart;\nChart.propTypes = {\n  priceHistory: PropTypes.array.isRequired\n};\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","PropTypes","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","priceHistory","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","console","log","labels","map","item","date","data","price","chartData","datasets","label","fill","borderColor","tension","options","responsive","plugins","title","display","text","_c","propTypes","array","isRequired","$RefreshReg$"],"sources":["/Users/zalan/Desktop/Programozos Dolgok/Poytogesek.nosync/PeakProjectGit/stock-symbol-app/frontend/src/components/Chart.jsx"],"sourcesContent":["import React from 'react';\n// import { Line } from 'react-chartjs-2';\nimport PropTypes from 'prop-types';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Registering the necessary chart elements for Chart.js version 3+\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\n\nconst Chart = ({ priceHistory }) => {\n  // Format the data received via props\n  // const labels = priceHistory.map(item => item.date); // assuming your priceHistory items have a date\n  // const data = priceHistory.map(item => item.price); // assuming priceHistory items have a price value\n\n  if (!priceHistory || priceHistory.length === 0) {\n    return <p className=\"text-red-500\">No data available for chart rendering</p>;\n  }\n  \n  console.log(priceHistory);\n  const labels = priceHistory.map(item => item.date); // Extract dates for X-axis\n  const data = priceHistory.map(item => item.price);\n  console.log(labels);\n  console.log(data);\n\n  const chartData = {\n    labels: labels,\n    datasets: [\n      {\n        label: 'Stock Price ($)',\n        data: data,\n        fill: false,\n        borderColor: 'rgba(75, 192, 192, 1)',\n        tension: 0.1,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    plugins: {\n      title: {\n        display: true,\n        text: 'Stock Price Over Time',\n      },\n    },\n  };\n\n  console.log(chartData);\n  console.log(options);\n  return (\n    <div className=\"mt-6 p-6 bg-gray-800 shadow-lg rounded-xl text-center border border-gray-700\">\n      <p className=\"text-lg font-medium text-gray-300\">Stock Price Chart</p>\n      <div className=\"h-64 bg-gray-700 rounded-xl\">\n        {/* <Line data={chartData} options={options} /> */}\n      </div>\n    </div>\n  );\n};\n\nChart.propTypes = {\n  priceHistory: PropTypes.array.isRequired,\n};\n\nexport default Chart;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,KAAK,IAAIC,OAAO,EAAEC,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;;AAE1H;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAT,OAAO,CAACU,QAAQ,CAACT,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAG/F,MAAMR,KAAK,GAAGA,CAAC;EAAEY;AAAa,CAAC,KAAK;EAClC;EACA;EACA;;EAEA,IAAI,CAACA,YAAY,IAAIA,YAAY,CAACC,MAAM,KAAK,CAAC,EAAE;IAC9C,oBAAOH,OAAA;MAAGI,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAqC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC9E;EAEAC,OAAO,CAACC,GAAG,CAACT,YAAY,CAAC;EACzB,MAAMU,MAAM,GAAGV,YAAY,CAACW,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;EACpD,MAAMC,IAAI,GAAGd,YAAY,CAACW,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACG,KAAK,CAAC;EACjDP,OAAO,CAACC,GAAG,CAACC,MAAM,CAAC;EACnBF,OAAO,CAACC,GAAG,CAACK,IAAI,CAAC;EAEjB,MAAME,SAAS,GAAG;IAChBN,MAAM,EAAEA,MAAM;IACdO,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,iBAAiB;MACxBJ,IAAI,EAAEA,IAAI;MACVK,IAAI,EAAE,KAAK;MACXC,WAAW,EAAE,uBAAuB;MACpCC,OAAO,EAAE;IACX,CAAC;EAEL,CAAC;EAED,MAAMC,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE;MACR;IACF;EACF,CAAC;EAEDnB,OAAO,CAACC,GAAG,CAACO,SAAS,CAAC;EACtBR,OAAO,CAACC,GAAG,CAACa,OAAO,CAAC;EACpB,oBACExB,OAAA;IAAKI,SAAS,EAAC,8EAA8E;IAAAC,QAAA,gBAC3FL,OAAA;MAAGI,SAAS,EAAC,mCAAmC;MAAAC,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACtET,OAAA;MAAKI,SAAS,EAAC;IAA6B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACqB,EAAA,GAhDIxC,KAAK;AAkDXA,KAAK,CAACyC,SAAS,GAAG;EAChB7B,YAAY,EAAEb,SAAS,CAAC2C,KAAK,CAACC;AAChC,CAAC;AAED,eAAe3C,KAAK;AAAC,IAAAwC,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}